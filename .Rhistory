ggplot(aes(x = meses, y = value, color = name))+
geom_line()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(limits = seq(1,12), breaks = seq(1,12,1))
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(limits = seq(1,12))
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(limits = c(1,12))
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(breaks = c(1,12))
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(breaks = seq(1,12,1))
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle = 'Nos próximos 12 meses')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle = 'Nos próximos 12 meses',
y = 'Número de usuários',
x = 'Meses')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle ='nos primeiros 12 meses',
y = 'Número de usuários',
x = 'Meses')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle ='nos primeiros 12 meses',
y = 'Número de usuários',
x = 'Meses',
colour = 'Tipo de usuário')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinador) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle ='nos primeiros 12 meses',
y = 'Número de usuários',
x = 'Meses',
colour = 'Tipo de usuário')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
data.frame(meses, atletas, patrocinio) %>%
pivot_longer(-meses) %>%
ggplot(aes(x = meses, y = value, color = name))+
geom_line()+
labs(title = 'Expectativa de usuários na plataforma',
subtitle ='nos primeiros 12 meses de lançamento',
y = 'Número de usuários',
x = 'Meses',
colour = 'Tipo de usuário')+
scale_x_continuous(breaks = seq(1,12,1))+
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
df_treino = read.csv('data/train.csv')
df_test = read.csv('data/test.csv')
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[13:25],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[26:37],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
#Pvalor
result_cor_test = sapply(numericas, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars = numericas[result_cor_test < 0.05]
signif_num_vars
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[7:13],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[14:20],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[21:27],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[28:34],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[35:39],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
data_cat = cbind(categoricas,y)
result_anova = summary(aov(y ~ ., data = data_cat))
knitr::opts_chunk$set(echo = TRUE)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[13:25],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[26:37],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
#Pvalor
result_cor_test = sapply(numericas, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars = numericas[result_cor_test < 0.05]
signif_num_vars
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[7:13],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[14:20],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[21:27],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[28:34],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[35:39],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
data_cat = cbind(categoricas,y)
result_anova = summary(aov(y ~ ., data = data_cat))
#pegando somente as variáveis que tiveram um pvalor abaixo de 0,05
result_anova = result_anova[[1]]
signif_cat_vars = result_anova[result_anova$`Pr(>F)` < 0.05,]
signif_cat_vars
#Pegando o nome das variáveis numéricas e categóricas
names_signif_vars_cat = signif_cat_vars %>% row.names %>% str_trim()
names_signif_vars_cat = names_signif_vars_cat[names_signif_vars_cat!="NA"]
names_signif_vars_num = signif_num_vars %>% colnames
signif_vars = c(names_signif_vars_cat, names_signif_vars_num)
signif_vars
#df_treino = df_treino[signif_vars]
#df_treino$y = y
#fazendo a limpeza do banco de dados das observações faltantes
#df_treino = df_treino %>% na.omit
n_treino = nrow(df_treino)
n_test = nrow(df_test)
library(fastDummies)
df_geral = rbind(df_treino, df_test)
df_geral = df_geral[signif_vars]
df_geral = dummy_cols(df_geral, select_columns = names_signif_vars_cat, remove_first_dummy = T)
treino = df_geral[1:n_treino, ]
teste = df_geral[n_treino:nrow(df_geral),]
treino = treino %>%
mutate(y = y) %>%
na.omit %>%
dplyr::select(!names_signif_vars_cat)
knitr::opts_chunk$set(echo = TRUE)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[13:25],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[26:37],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
#Pvalor
result_cor_test = sapply(numericas, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars = numericas[result_cor_test < 0.05]
signif_num_vars
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[7:13],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[14:20],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[21:27],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[28:34],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[35:39],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[1:6],y) %>%
pivot_longer(-y)
cbind(categoricas[1:6],y) %>%
pivot_longer(-y)
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
order()
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
sort()
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
arrange(.by_group = 'name')
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
arrange(name)
knitr::opts_chunk$set(echo = TRUE)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[13:25],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[26:37],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
#Pvalor
result_cor_test = sapply(numericas, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars = numericas[result_cor_test < 0.05]
signif_num_vars
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[7:13],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[14:20],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[21:27],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[28:34],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[35:39],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
cbind(categoricas[1:6],y) %>%
pivot_longer(-y) %>%
arrange(name)
data_cat = cbind(categoricas,y)
result_anova = summary(aov(y ~ ., data = data_cat))
#pegando somente as variáveis que tiveram um pvalor abaixo de 0,05
result_anova = result_anova[[1]]
signif_cat_vars = result_anova[result_anova$`Pr(>F)` < 0.05,]
signif_cat_vars
#Pegando o nome das variáveis numéricas e categóricas
names_signif_vars_cat = signif_cat_vars %>% row.names %>% str_trim()
names_signif_vars_cat = names_signif_vars_cat[names_signif_vars_cat!="NA"]
names_signif_vars_num = signif_num_vars %>% colnames
signif_vars = c(names_signif_vars_cat, names_signif_vars_num)
signif_vars
#df_treino = df_treino[signif_vars]
#df_treino$y = y
#fazendo a limpeza do banco de dados das observações faltantes
#df_treino = df_treino %>% na.omit
n_treino = nrow(df_treino)
n_test = nrow(df_test)
library(fastDummies)
df_geral = rbind(df_treino, df_test)
df_geral = df_geral[signif_vars]
df_geral = dummy_cols(df_geral, select_columns = names_signif_vars_cat, remove_first_dummy = T)
treino = df_geral[1:n_treino, ]
teste = df_geral[n_treino:nrow(df_geral),]
treino = treino %>%
mutate(y = y) %>%
na.omit %>%
dplyr::select(!names_signif_vars_cat)
dim(treino)
treino %>% names %>% length()
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
dev.off()
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas)+length(categoricas)
cbind(numericas[1:12],y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
