for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables['nao_correlacionadas'] = append(partition_variables['nao_correlacionadas'],
matrix_names_cols[indice])
}else{
partition_variables['correlacionadas'] = append(partition_variables['correlaciondas'],
indice)
}
indice = indice + 1
}
return(partition_variables)
}
part_variables_by_correlation(correlation_matrix, 0.5)
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
# for(x in correlation_matrix_signific){
#   if(length(x)==1){
#     partition_variables['nao_correlacionadas'] = append(partition_variables['nao_correlacionadas'],
#                                                         matrix_names_cols[indice])
#   }else{
#     partition_variables['correlacionadas'] = append(partition_variables['correlaciondas'],
#                                                     indice)
#   }
#
#   indice = indice + 1
# }
return(partition_variables)
}
part_variables_by_correlation(correlation_matrix, 0.5)
a = part_variables_by_correlation(correlation_matrix, 0.5)
a['correlacionadas']
append(a['correlacionadas'],1)
append(a$correlacionadas,1)
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlaciondas,
indice)
}
indice = indice + 1
}
return(partition_variables)
}
part_variables_by_correlation(correlation_matrix, 0.5)
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$nao_correlacionadas
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
print(length(x))
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlaciondas,
indice)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
print(x)
partition_variables$correlacionadas = append(partition_variables$correlaciondas,
indice)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
print(indice)
partition_variables$correlacionadas = append(partition_variables$correlaciondas,
indice)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
print(indice)
partition_variables$correlacionadas = append(partition_variables$correlaciondas,
as.character(indice))
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
print(indice)
partition_variables$correlacionadas = append(partition_variables$correlacionadas,
as.character(indice))
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas$indice = names(x)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas[indice] = names(x)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas[indice] = 1
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas[indice] = indice
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, x)
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
a = list('a',b)
a = list('a','b')
a
names(a)[1] = ''
a
names(a)[1] = 'b'
a
a = list('a','b')
a = list('a')
names(a)[1] = 'a'
a
a = append(a,'b')
a
names(a)[2] = 'b'
a
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
len_vetor = length(partition_variables$partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
len_vetor = length(partition_variables$partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor+1] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
len_vetor = length(partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor+1] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
len_vetor = length(partition_variables$partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(x in correlation_matrix_signific){
if(length(x)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas, list(x))
len_vetor = length(partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
a = part_variables_by_correlation(correlation_matrix, 0.5)
a$correlacionadas
part_variables_by_correlation(correlation_matrix, 0.5)
part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(var_of_correlation_matrix in correlation_matrix_signific){
if(length(xvar_of_correlation_matrix)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas,
list(var_of_correlation_matrix))
len_vetor = length(partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
part_variables_by_correlation = function(correlation_matrix, significant_level){
matrix_names_cols = colnames(correlation_matrix)
correlation_matrix_signific = get_significant_correlations(correlation_matrix, significant_level)
partition_variables = list('nao_correlacionadas' = list(),
'correlacionadas' = list())
indice = 1
for(var_of_correlation_matrix in correlation_matrix_signific){
if(length(var_of_correlation_matrix)==1){
partition_variables$nao_correlacionadas = append(partition_variables$nao_correlacionadas,
matrix_names_cols[indice])
}else{
partition_variables$correlacionadas = append(partition_variables$correlacionadas,
list(var_of_correlation_matrix))
len_vetor = length(partition_variables$correlacionadas)
names(partition_variables$correlacionadas)[len_vetor] = matrix_names_cols[indice]
}
indice = indice + 1
}
return(partition_variables)
}
part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
source('./src/utils.R')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas) + length(categoricas)
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
source('./src/utils.R')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas) + length(categoricas)
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
source('./src/utils.R')
options(scipen=999)
pacman::p_load('tidyverse')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas) + length(categoricas)
library(corrplot)
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado)
part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
part_variables_by_correlation(correlation_matrix, 0.3)$correlacionadas
part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
lapply(a, function(x)names(x))
a = part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
lapply(a, function(x)names(x))
lapply(a, function(x)names(x)) %>% unlist
plot(lapply(a, function(x)names(x)) %>% unlist)
desc(lapply(a, function(x)names(x)) %>% unlist)
table(lapply(a, function(x)names(x)) %>% unlist)
a = part_variables_by_correlation(correlation_matrix, 0.6)$correlacionadas
table(lapply(a, function(x)names(x)) %>% unlist)
