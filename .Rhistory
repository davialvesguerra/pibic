ContCoef(a,b)
table(a,b)
ContCoef(table(a,b))
ContCoef(table(a,b))
ContCoef(a,b)
ContCoef(a,a)
ContCoef(a,a,b)
ContCoef(a,c(a,b))
list(a,a,b)
lapply(list(a,a,b), function(x) ContCoef(a,x))
categoricas[1,1]
dim(categoricas)
categoricas[1]
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var) ContCoef(data[fixed_var],actual_var))
})
}
calcule_multiple_coef_contigency(categoricas)
ContCoef(categoricas[1], categoricas[4])
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var) ContCoef(unlist(data[fixed_var]),unlist(actual_var)))
})
}
calcule_multiple_coef_contigency(categoricas)
categoricas[1]
unlist(categoricas[1])
a = calcule_multiple_coef_contigency(categoricas)
View(a)
data.frame(a)
b = as.data.frame(a)
View(b)
colnames(b) = row.names(b)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var) ContCoef(unlist(data[fixed_var]),unlist(actual_var)))
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(matrix_coef_Contingency)
}
calcule_multiple_coef_contigency(categoricas)
matrix(calcule_multiple_coef_contigency(categoricas))
as.matrix(calcule_multiple_coef_contigency(categoricas))
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var) ContCoef(unlist(data[fixed_var]),unlist(actual_var)))
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
(calcule_multiple_coef_contigency(categoricas))
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
part_variables_by_correlation(matrix_coef_contigency)
part_variables_by_correlation(matrix_coef_contigency, 0.4)
part_variables_by_correlation(matrix_coef_contigency, 0.4)$correlacionadas
na.omit(categoricas)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var) ContCoef(na.omit(unlist(data[fixed_var])),na.omit(unlist(actual_var))))
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = data.frame(unlist(data[fixed_var]),unlist(actual_var))
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var))
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = table(unlist(data[fixed_var]),unlist(actual_var))
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
View(matrix_coef_contigency)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
part_variables_by_correlation(matrix_coef_contigency, 0.4)$correlacionadas
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas[,1]) %>% view()
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:3, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas[,1]) %>% view()
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
categoricas = na.omit(categoricas)
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas[,1])
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
contingency_table = na.omit(contingency_table)
contingency_table = table(contingency_table)
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
contingency_table = na.omit(contingency_table)
contingency_table = table(contingency_table)
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
contingency_table = na.omit(contingency_table)
contingency_table = table(contingency_table)
ContCoef(contingency_table)
})
}) %>%
as.data.frame
# colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
ContCoef(contingency_table)
})
}) %>%
as.data.frame
# colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = as.data.frame(unlist(data[fixed_var]),unlist(actual_var)) %>%
na.omit() %>%
table()
print(contingency_table)
ContCoef(contingency_table)
})
}) %>%
as.data.frame
# colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
a = categoricas$MSZoning
b = categoricas$Street
table(a,b)
table(a,b, useNA = 'no')
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = table(unlist(data[fixed_var]),unlist(actual_var), useNA = 'no') %>%
ContCoef(contingency_table)
})
}) %>%
as.data.frame
# colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:2, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = table(unlist(data[fixed_var]),unlist(actual_var), useNA = 'no')
ContCoef(contingency_table)
})
}) %>%
as.data.frame
# colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = table(unlist(data[fixed_var]),unlist(actual_var), useNA = 'no')
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas) %>% view
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
part_variables_by_correlation(matrix_coef_contigency, 0.4)$correlacionadas
part_variables_by_correlation(matrix_coef_contigency, 0.5)$correlacionadas
part_variables_by_correlation(matrix_coef_contigency, 0.5)$nao_correlacionadas
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
source('./src/utils.R')
options(scipen=999)
pacman::p_load('tidyverse','DescTools')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas) + length(categoricas)
library(corrplot)
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado)
num_vars_correlated = part_variables_by_correlation(correlation_matrix, 0.6)$correlacionadas
num_vars_correlated
num_vars_correlated = part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
num_vars_correlated
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, 0.5)$nao_correlacionadas
cat_vars_associated
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, 0.5)$correlacionadas
cat_vars_associated
knitr::opts_chunk$set(echo = TRUE, message = F)
setwd('D:/pibic')
source('./src/utils.R')
options(scipen=999)
pacman::p_load('tidyverse','DescTools')
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
length(numericas) + length(categoricas)
library(corrplot)
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado)
num_vars_correlated = part_variables_by_correlation(correlation_matrix, 0.5)$correlacionadas
num_vars_correlated
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, 0.5)$correlacionadas
cat_vars_associated
part_variables_by_correlation(matrix_coef_contigency, 0.5)
calcule_multiple_coef_contigency = function(data){
num_cols = dim(data)[2]
matrix_coef_Contingency = lapply(1:num_cols, function(fixed_var){
sapply(data, function(actual_var){
contingency_table = table(unlist(data[fixed_var]),unlist(actual_var), useNA = 'no')
ContCoef(contingency_table)
})
}) %>%
as.data.frame
colnames(matrix_coef_Contingency) = row.names(matrix_coef_Contingency)
return(as.matrix(matrix_coef_Contingency))
}
calcule_multiple_coef_contigency(categoricas)
names(num_vars_correlated)
names(num_vars_correlated$OverallQual)
names(num_vars_correlated[[1]])
names(num_vars_correlated[[2]])
a = names(num_vars_correlated)
b = names(num_vars_correlated[[2]])
b %in% a
b
a %in% b
mean(a %in% b)
b = names(num_vars_correlated[[1]])
mean(a %in% b)
sapply(num_var_correlated, function(x) mean(a %in% names(x)))
sapply(num_vars_correlated, function(x) mean(a %in% names(x)))
sapply(num_vars_correlated, function(x) length(x))
sapply(num_vars_correlated, function(x) length(x)) %>% sort
sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T)
for(x in num_vars_correlated){
print(x)
}
for(x in num_vars_correlated){
print(names(x))
}
for(x in num_vars_correlated){
names(x)[vars_correlated_with_someone]
}
vars_correlated_with_someone = c()
for(x in num_vars_correlated){
names(x)[vars_correlated_with_someone]
}
for(x in num_vars_correlated){
print(names(x)[vars_correlated_with_someone])
}
for(x in num_vars_correlated){
print(names(x))
}
for(x in num_vars_correlated){
print(names(x)[vars_correlated_with_someone])
}
vars_correlated_with_someone = c('OverallQual')
for(x in num_vars_correlated){
print(names(x)[vars_correlated_with_someone])
}
names(num_vars_correlated[[1]])
names(num_vars_correlated[[1]])[c('OverallQual')]
names(num_vars_correlated[[1]])['OverallQual']
names(num_vars_correlated[[1]])
vars_correlated_with_someone = c('OverallQual',"YearBuilt","YearRemodAdd")
names(num_vars_correlated[[1]])
names(num_vars_correlated[[1]]) %in% vars_correlated_with_someone
index_new_vars_correlatead = names(num_vars_correlated[[1]]) %in% vars_correlated_with_someone
names[[1]][index_new_vars_correlatead]
names(num_vars_correlated[[1]])[index_new_vars_correlatead]
index_new_vars_correlatead = !(names(num_vars_correlated[[1]]) %in% vars_correlated_with_someone)
names(num_vars_correlated[[1]])[index_new_vars_correlatead]
append(vars_Correlated_with_someone,names(num_vars_correlated[[1]])[index_new_vars_correlatead])
append(vars_correlated_with_someone,names(num_vars_correlated[[1]])[index_new_vars_correlatead])
vars_correlated_with_someone
vars_correlated_with_someone = c()
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !names(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
}
vars_correlated_with_someone = c('')
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !names(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
}
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
# index_new_vars_correlatead = !names(actual_names %in% vars_correlated_with_someone)
# vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
}
vars_correlated_with_someone = c()
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
}
vars_correlated_with_someone
num_vars_correlated
View(num_vars_correlated)
View(num_vars_correlated)
View(num_vars_correlated)
vars_correlated_with_someone = c()
cont = 1
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
if(length(vars_correlated_with_someone) == length(names(num_vars_correlated))){
break
}
cont = cont + 1
}
cont
length(names(num_vars_correlated))
vars_correlated_with_someone
names(num_vars_correlated)[1:cont]
vars_correlated_with_someone = c()
cont = 1
for(actual_vars in num_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
cont = cont + 1
if(length(vars_correlated_with_someone) == length(names(num_vars_correlated))){
break
}
}
vars_correlated_with_someone
names(num_vars_correlated)[1:cont]
find_enough_vars_correlated = function(list_vars_correlated){
vars_correlated_with_someone = c()
cont = 1
for(actual_vars in list_vars_correlated){
actual_names = names(actual_vars)
index_new_vars_correlatead = !(actual_names %in% vars_correlated_with_someone)
vars_correlated_with_someone = append(vars_correlated_with_someone, actual_names[index_new_vars_correlatead])
cont = cont + 1
if(length(vars_correlated_with_someone) == length(names(list_vars_correlated))){
break
}
}
return(vars_correlated_with_someone)
}
find_enough_vars_correlated(num_vars_correlated)
find_enough_vars_correlated(cat_vars_associated)
length(names(cat_vars_associated))
length(find_enough_vars_correlated(cat_vars_associated))
find_enough_vars_correlated(cat_vars_associated)
cat_vars_associated
