setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr","Fireplaces")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$correlacionadas
cat_vars_not_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$nao_correlacionadas %>% unlist
cat_names_ordered = sapply(cat_vars_associated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_associated = find_list_enough_vars_correlated(cat_vars_associated[cat_names_ordered])
vec_enough_vars_associated_or_correlated = c(enough_vars_associated,enough_vars_correlated)
vec_vars_not_associated_or_correlated = c(cat_vars_not_associated, num_vars_not_correlated)
vec_util_vars = c(vec_vars_not_associated_or_correlated, vec_enough_vars_associated_or_correlated)
vec_num_vars_utils = c(enough_vars_correlated, num_vars_not_correlated)
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(num_vars_not_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
data_num = cbind(df_treino[vec_num_vars_utils])
vec_cor_vars = sapply(data_num, function(x) round(cor(x,y, use = 'complete.obs'),5))
result_cor_test = sapply(data_num, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars_by_test = data_num[result_cor_test < 0.05] %>% colnames()
signif_num_vars_by_test
signif_num_vars_by_cor = vec_cor_vars[abs(vec_cor_vars) > 0.5]
signif_num_vars_by_cor
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_associated[6:10]) %>%
cbind(y) %>%
mutate(KitchenAbvGr = as.character(KitchenAbvGr)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[1:6]) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[7:11]) %>%
cbind(y) %>%
mutate(Fireplaces = as.character(Fireplaces)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
data_cat = cbind(df_treino[vec_cat_vars_utils],y)
result_anova = summary(aov(y ~ ., data = data_cat))
result_anova
result_anova = result_anova[[1]]
signif_cat_vars = result_anova[result_anova$`Pr(>F)` < 0.05,] %>%
row.names %>% str_trim() %>%
str_remove('NA')
signif_cat_vars
signif_vars = c(names(signif_num_vars_by_cor), signif_cat_vars)
signif_vars = signif_vars[signif_vars != ""]
signif_vars
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
for(x in 1:10){
print(x)
}
for(x in df){
print(x)
}
for(x in df){
lm(y~x)
}
for(x in df){
print(lm(y~x))
}
for(x in df){
plot(lm(y~x))
}
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
for(x in df){
plot(lm(y~x))
}
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
for(x in df){
plot(lm(y~x))
}
cbind(df_treino[signif_vars],y)
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
for(x in df){
plot(lm(y~x))
}
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr","Fireplaces")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$correlacionadas
cat_vars_not_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$nao_correlacionadas %>% unlist
cat_names_ordered = sapply(cat_vars_associated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_associated = find_list_enough_vars_correlated(cat_vars_associated[cat_names_ordered])
vec_enough_vars_associated_or_correlated = c(enough_vars_associated,enough_vars_correlated)
vec_vars_not_associated_or_correlated = c(cat_vars_not_associated, num_vars_not_correlated)
vec_util_vars = c(vec_vars_not_associated_or_correlated, vec_enough_vars_associated_or_correlated)
vec_num_vars_utils = c(enough_vars_correlated, num_vars_not_correlated)
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(num_vars_not_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
data_num = cbind(df_treino[vec_num_vars_utils])
vec_cor_vars = sapply(data_num, function(x) round(cor(x,y, use = 'complete.obs'),5))
result_cor_test = sapply(data_num, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars_by_test = data_num[result_cor_test < 0.05] %>% colnames()
signif_num_vars_by_test
signif_num_vars_by_cor = vec_cor_vars[abs(vec_cor_vars) > 0.5]
signif_num_vars_by_cor
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_associated[6:10]) %>%
cbind(y) %>%
mutate(KitchenAbvGr = as.character(KitchenAbvGr)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[1:6]) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[7:11]) %>%
cbind(y) %>%
mutate(Fireplaces = as.character(Fireplaces)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
data_cat = cbind(df_treino[vec_cat_vars_utils],y)
result_anova = summary(aov(y ~ ., data = data_cat))
result_anova
result_anova = result_anova[[1]]
signif_cat_vars = result_anova[result_anova$`Pr(>F)` < 0.05,] %>%
row.names %>% str_trim() %>%
str_remove('NA')
signif_cat_vars
signif_vars = c(names(signif_num_vars_by_cor), signif_cat_vars)
signif_vars = signif_vars[signif_vars != ""]
signif_vars
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
for(x in df){
plot(lm(y~x))
}
for(x in df){
lm(y~x)
}
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
for(x in df){
lm(y~x)
}
for(x in df){
plot(lm(y~x))
}
for(x in df){
plot(lm(y~x, na.omit = TRUE))
}
plot(lm(y~x, na.action = 'na.omit'))
for(x in df){
plot(lm(y~x, na.action = 'na.omit'))
}
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
df
plot(y~df[1])
lm(y~df[1])
df[1]
lm(y~unlist(df[1]))
lm(y~x, data = df)
lm(y~., data = df)
lm(y~., data = df)
lm(y~., data = df)(1)
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
lm(y~., data = df)
model = lm(y~., data = df)
model$coefficients
model = lm(y~., data = df)
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
View(df_treino)
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
best_model = MASS::stepAIC(model, direction = 'backward')
best_model = MASS::stepAIC(model, direction = 'backward')
best_model$coefficients %>% names
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
model
# library(MASS)
#
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
model = lm(y~., data = df)
model
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
model
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
best_model = MASS::stepAIC(model, direction = 'backward')
best_model = MASS::stepAIC(model, direction = 'backward')
best_model$coefficients %>% names
model = lm(y~., data = df)
df = cbind(df_treino[signif_vars],y)
contributors()
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr","Fireplaces")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$correlacionadas
cat_vars_not_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$nao_correlacionadas %>% unlist
cat_names_ordered = sapply(cat_vars_associated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_associated = find_list_enough_vars_correlated(cat_vars_associated[cat_names_ordered])
vec_enough_vars_associated_or_correlated = c(enough_vars_associated,enough_vars_correlated)
vec_vars_not_associated_or_correlated = c(cat_vars_not_associated, num_vars_not_correlated)
vec_util_vars = c(vec_vars_not_associated_or_correlated, vec_enough_vars_associated_or_correlated)
vec_num_vars_utils = c(enough_vars_correlated, num_vars_not_correlated)
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(num_vars_not_correlated) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_point()+
facet_wrap(~name, scales = 'free')
data_num = cbind(df_treino[vec_num_vars_utils])
vec_cor_vars = sapply(data_num, function(x) round(cor(x,y, use = 'complete.obs'),5))
result_cor_test = sapply(data_num, function(x) round(cor.test(x,y)$p.value,5))
result_cor_test
signif_num_vars_by_test = data_num[result_cor_test < 0.05] %>% colnames()
signif_num_vars_by_test
signif_num_vars_by_cor = vec_cor_vars[abs(vec_cor_vars) > 0.5]
signif_num_vars_by_cor
vec_cat_vars_utils = c(enough_vars_associated, cat_vars_not_associated)
df_treino %>%
select(enough_vars_associated[6:10]) %>%
cbind(y) %>%
mutate(KitchenAbvGr = as.character(KitchenAbvGr)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[1:6]) %>%
cbind(y) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(cat_vars_not_associated[7:11]) %>%
cbind(y) %>%
mutate(Fireplaces = as.character(Fireplaces)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
data_cat = cbind(df_treino[vec_cat_vars_utils],y)
result_anova = summary(aov(y ~ ., data = data_cat))
result_anova
result_anova = result_anova[[1]]
signif_cat_vars = result_anova[result_anova$`Pr(>F)` < 0.05,] %>%
row.names %>% str_trim() %>%
str_remove('NA')
signif_cat_vars
signif_vars = c(names(signif_num_vars_by_cor), signif_cat_vars)
signif_vars = signif_vars[signif_vars != ""]
signif_vars
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
best_model = MASS::stepAIC(model, direction = 'backward')
best_model$coefficients %>% names
df_treino %>%
select(enough_vars_associated[1:4]) %>%
cbind(y) %>%
mutate(KitchenAbvGr = as.character(KitchenAbvGr)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
df_treino %>%
select(enough_vars_associated[1:4]) %>%
cbind(y) %>%
# mutate(KitchenAbvGr = as.character(KitchenAbvGr)) %>%
pivot_longer(-y) %>%
ggplot(aes(x = value, y = y))+
geom_boxplot()+
facet_wrap(~name, scales = 'free')
summary(model)
df = cbind(df_treino[signif_vars],y)
df = na.omit(df)
model = lm(y~., data = df)
summary(model)
summary.lm(lm(y~., data = df))
summary.model = summary.lm(lm(y~., data = df))
summary.model$terms
summary.lm(lm(y~., data = df))
summary.model$coefficients
summary.model$coefficients[1]
summary.model$coefficients
summary.model$coefficients %>% as.data.frame
summary.model$coefficients[1,1]
summary.model$coefficients[1,2]
summary.model$coefficients[1,]
summary.model$coefficients[,]
summary.model$coefficients %>% row.names()
summary.model$coefficients %>% row.names()
names_covars = summary.model$coefficients %>% row.names()
names_covars
summary.model$coefficients
summary.model
summary.model$fstatistic
summary.model$cov.unscaled
summary.model$sigma
summary.model$terms
summary.model
summary.model$coefficients
coefs_model = summary.model$coefficients
as.data.frame(summary.model$coefficients)
coefs_model = as.data.frame(summary.model$coefficients)
coefs_model['Covars Names'] = row.names(coefs_model)
names_covars = summary.model$coefficients %>% row.names()
coefs_model
View(coefs_model)
coefs_model %>%
filter(str_detect(`Covars Names`),'Neighborhood')
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood'))
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>% view
summary.lm(lm(y~., data = df))
qt(0.95, 1258)
1 - qt(0.95, 1258)
1 - dt(0.95, 1258)
dt(0.95, 1258)
dt(0.95, 1258)
pt(14, 1258)
1-pt(14, 1258)
1-pt(12.255, 1258)
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
lapply(., function(x)x)
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
apply(., 1, function(x)x)
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
apply(., 1, function(x)x$`Pr(>|t|)`)
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
apply(., 1, function(x)x[3])
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
apply(., 1, function(x)length(x))
coefs_model %>%
filter(str_detect(`Covars Names`,'Neighborhood')) %>%
apply(., 1, function(x)x[4])
