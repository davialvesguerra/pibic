group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = T))
})
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ''))
})
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 2)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 10)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
a
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1000)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
a
group_by_value = function(vec, interval ){
minimo = vec[1]
sapply(vec, function(x){
if(x > minimo + interval){
minimo = x
}
return(minimo)
})
}
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1000)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
a
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1000)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(names_groups = paste(categories_of_category,collapse = ','))
})
}
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = ','),
category = name_of_category)
})
}
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = ',')) %>%
mutate(category = cat_var)
})
}
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef = function(data_coef_model, vec_cat_vars, name_col_reference = ''){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, interval = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})
}
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
a$Neighborhood
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value = 1)) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef(coefs_model, signif_cat_vars, name_col_reference = 't value')
a
a%>%
data.table::rbindlist()
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference) %>%
mutate(var_reference_group = group_by_value(var_reference, coef_value )) %>%
group_by(var_reference_group) %>%
summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef_value(coefs_model, signif_cat_vars, name_col_reference = 't value', coef_value = 1)
a
a = group_vars_by_coef_value(coefs_model, signif_cat_vars, name_col_reference = 't value', coef_value = 1.5)
a
a = group_vars_by_coef_value(coefs_model, signif_cat_vars, name_col_reference = 't value', coef_value = 2)
a
a %>% view()
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var) %>%
mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
select(name_of_category, categories_of_category, var_reference) %>%
arrange(var_reference)
# %>%
#     mutate(var_reference_group = group_by_value(var_reference, coef_value )) %>%
#     group_by(var_reference_group) %>%
#     summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
#     mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef_value(coefs_model, signif_cat_vars, name_col_reference = 't value', coef_value = 2)
a %>% view()
group_vars_by_coef_value = function(data_coef_model, vec_cat_vars, name_col_reference, coef_value){
lapply(vec_cat_vars, function(cat_var){
data_coef_model %>%
filter(str_detect(`Covars Names`,cat_var)) %>%
filter(`Pr(>|t|)` >= 0.05) %>%
rename(var_reference = name_col_reference) %>%
mutate(name_of_category = cat_var)
# %>%
#     mutate(categories_of_category = str_remove(`Covars Names`,cat_var)) %>%
#     select(name_of_category, categories_of_category, var_reference) %>%
#     arrange(var_reference)  %>%
#     mutate(var_reference_group = group_by_value(var_reference, coef_value )) %>%
#     group_by(var_reference_group) %>%
#     summarise(categories_of_category = paste(categories_of_category,collapse = '_')) %>%
#     mutate(category = cat_var)
})%>%
data.table::rbindlist()
}
a = group_vars_by_coef_value(coefs_model, signif_cat_vars, name_col_reference = 't value', coef_value = 2)
a %>% view()
View(df)
coefs_model
coefs_model %>% view
# library(MASS)
#
df_model = cbind(df_treino[signif_vars],y)
df_model = na.omit(df_model)
model = lm(y~., data = df_model)
summary(model)
summary(model) %>% view
summary(model)
signif_vars
signif_cat_vars
# library(MASS)
#
df_model = cbind(df_treino[signif_vars],y)
df_model = na.omit(df_model) %>%
mutate()
df_model
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R', encoding = 'UTF-8')
source('./utils/handle_model.R', encoding = 'UTF-8')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
find_list_enough_vars_correlated = function(list_vars_correlated){
vec_vars_correlated_with_someone = c()
vec_all_possibles_vars_correlated = c()
vec_names_vars_correlated = names(list_vars_correlated)
cont_from_all_vars = 1
for(vec_actual_vars in list_vars_correlated){
vec_actual_names = names(vec_actual_vars)
vec_index_new_vars_correlatead = !(vec_actual_names %in% vec_all_possibles_vars_correlated)
vec_all_possibles_vars_correlated = append(vec_all_possibles_vars_correlated,
vec_actual_names[vec_index_new_vars_correlatead])
if(mean(!vec_index_new_vars_correlatead) != 1 || cont_from_all_vars == 1){
vec_vars_correlated_with_someone = append(vec_vars_correlated_with_someone,
vec_names_vars_correlated[cont_from_all_vars])
vec_all_possibles_vars_correlated = append(vec_all_possibles_vars_correlated,
vec_names_vars_correlated[cont_from_all_vars])
}
cont_from_all_vars = cont_from_all_vars + 1
}
return(vec_vars_correlated_with_someone)
}
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$correlacionadas
cat_vars_not_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$nao_correlacionadas %>% unlist
cat_names_ordered = sapply(cat_vars_associated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_associated = find_list_enough_vars_correlated(cat_vars_associated[cat_names_ordered])
vec_enough_vars_associated_or_correlated = c(enough_vars_associated,enough_vars_correlated)
vec_vars_not_associated_or_correlated = c(cat_vars_not_associated, num_vars_not_correlated)
vec_util_vars = c(vec_vars_not_associated_or_correlated, vec_enough_vars_associated_or_correlated)
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R', encoding = 'UTF-8')
source('./utils/handle_model.R', encoding = 'UTF-8')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
matrix_coef_contigency = calcule_multiple_coef_contigency(categoricas)
cat_vars_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$correlacionadas
cat_vars_not_associated = part_variables_by_correlation(matrix_coef_contigency, valor_coef)$nao_correlacionadas %>% unlist
cat_names_ordered = sapply(cat_vars_associated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_associated = find_list_enough_vars_correlated(cat_vars_associated[cat_names_ordered])
vec_enough_vars_associated_or_correlated = c(enough_vars_associated,enough_vars_correlated)
vec_vars_not_associated_or_correlated = c(cat_vars_not_associated, num_vars_not_correlated)
vec_util_vars = c(vec_vars_not_associated_or_correlated, vec_enough_vars_associated_or_correlated)
knitr::opts_chunk$set(echo = F, message = F)
setwd('D:/pibic/src')
pacman::p_load('tidyverse','DescTools')
source('./utils/handle_data.R', encoding = 'UTF-8')
source('./utils/handle_model.R', encoding = 'UTF-8')
options(scipen=999)
#Retirando essas variáveis dos bancos de dados pois elas apresentavam muitos valores faltantes
#na hora das análises e os valores que restavam não influenciava muito na variável resposta
df_treino = read.csv('../data/train.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
df_test = read.csv('../data/test.csv') %>%
dplyr::select(!c(Alley,PoolQC,Fence,MiscFeature))
y = df_treino$SalePrice
df_treino = df_treino %>%
dplyr::select(!c(SalePrice))
col_num = sapply(df_treino, typeof) == "integer"
col_char = sapply(df_treino, typeof) == "character"
numericas = df_treino[col_num]
categoricas = df_treino[col_char]
pseudo_vars_numericas = c("BsmtHalfBath","BsmtFullBath","FullBath","HalfBath","BedroomAbvGr","KitchenAbvGr")
numericas = numericas %>%
select(!pseudo_vars_numericas)
categoricas = cbind(categoricas, df_treino[pseudo_vars_numericas])
categoricas[pseudo_vars_numericas] = sapply(categoricas[pseudo_vars_numericas], as.factor)
valor_coef = 0.5
numericas_tratado = na.omit(numericas[-1])
correlation_matrix = cor(numericas_tratado, use = 'complete.obs')
num_vars_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$correlacionadas
num_vars_not_correlated = part_variables_by_correlation(correlation_matrix, valor_coef)$nao_correlacionadas %>% unlist
num_names_ordered = sapply(num_vars_correlated, function(x) length(x)) %>% sort(decreasing = T) %>% names
enough_vars_correlated = find_list_enough_vars_correlated(num_vars_correlated[num_names_ordered])
a
'a'
a
